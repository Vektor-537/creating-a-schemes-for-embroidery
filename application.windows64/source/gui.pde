public void button1_op(GButton source, GEvent event) { //_CODE_:op:778802:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  selectInput("Select a file to process:", "fileSelected");
  rozr();
} //_CODE_:op:778802:

public void button2_sv(GButton source, GEvent event) { //_CODE_:sv:854504:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  if (!im) {
    println("no imege");
  } else {
    rozr();
    img_=(col(roz(img), is));
    selectOutput("Select a file to write to:", "fileSelected_o");
  }
} //_CODE_:sv:854504:

public void button3_wi(GButton source, GEvent event) { //_CODE_:wi:549412:
  println("button3 - GButton >> GEvent." + event + " @ " + millis()+ " @ " );
  if (!im) {
    println("no imege");
  } else {

    rozr();
    img_=sit(col(roz(img), is));
    println("h"+img_.height+"w"+img_.width);

    // window1.close();
    window1= GWindow.getWindow(this, "Window "+1, 10, 10, min(displayWidth-20, img_.width), min(displayHeight-100, img_.height), JAVA2D);
    window1.addData(new MyWinData()); 
    window1.addDrawHandler(this, "windowDraw");
    window1.addMouseHandler(this, "windowMouse");
  }
} //_CODE_:wi:549412:

public void textfield1_x(GTextField source, GEvent event) { //_CODE_:x:742375:
  //if (event=="CHANGED").. h_s=(textfield1.getSelectedText());
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());    
  rozr();
} //_CODE_:x:742375:

public void textfield2_y(GTextField source, GEvent event) { //_CODE_:y:532651:
  // w=Integer.parseInt(textfield2.getSelectedText());
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:y:532651:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:all_color:217071:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());    
  rozr(); 
  println(source.getSelectedText()); 
  source.setOpaque(true);
  Add.setLocalColor(4, al[source.getSelectedIndex()]);
  // all_color.setLocalColor(1, al[source.getSelectedIndex()]);
  buf=al[source.getSelectedIndex()];

  // all_color.setFocus(true);
  //  button4.setLocalColorScheme(al[source.getSelectedIndex()]);
} //_CODE_:all_color:217071:

public void button4_Add(GButton source, GEvent event) { //_CODE_:Add:902335:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  boolean is_f=true;
  for (int i=0; i<col_is; i++ ) {
    println(rgb(is[i])+"["+i+"]"+" =="+rgb(buf));
    if (is[i]==buf) {
      is_f=false;
      break;
    }
  }
  if (is_f) {
    is[col_is]=buf;
    col_is++;
    is=sort(0, is);

    save_is();
  }
} //_CODE_:Add:902335:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:641189:
  println("slider1 - GSlider >> GEvent." + event.toString() + " @ " + millis());
  if (im) { 
    rozr();  
    if (event.toString().charAt(0)=='R') {
      img_=sit(col(roz(img), is));
      window1.addData(new MyWinData());
    }
  }
} //_CODE_:slider1:641189:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:499428:
  println("button1 - GButton >> GEvent." + event + " @ " + millis()); 
  if (!im) {
    println("no imege");
  } else {
    rozr();
    img_=sit(col(roz(img), is));
    selectOutput("Select a file to write to:", "fileSelected_o");
  }
} //_CODE_:button1:499428:

public void RGB_click1(GImageButton source, GEvent event) { //_CODE_:RGB_:979955:
  println("RGB - GImageButton >> GEvent." + event + " @ " + millis());
  buf=G4P.selectColor();
  Add.setLocalColor(4, buf);
  save_all(buf );
} //_CODE_:RGB_:979955:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:253753:
  appc.background(230);
} //_CODE_:window1:253753:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI() {
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  op = new GButton(this, 15, 15, 80, 30);
  op.setText("open");
  op.addEventHandler(this, "button1_op");
  sv = new GButton(this, 105, 15, 80, 30);
  sv.setText("save maket");
  sv.addEventHandler(this, "button2_sv");
  wi = new GButton(this, 285, 15, 80, 30);
  wi.setText("wiev");
  wi.addEventHandler(this, "button3_wi");
  x = new GTextField(this, 15, 60, 60, 20, G4P.SCROLLBARS_NONE);
  x.setPromptText("height");
  x.setOpaque(true);
  x.addEventHandler(this, "textfield1_x");
  y = new GTextField(this, 90, 60, 60, 20, G4P.SCROLLBARS_NONE);
  y.setPromptText("wieght");
  y.setOpaque(true);
  y.addEventHandler(this, "textfield2_y");
  all_color = new GDropList(this, 15, 90, 200, 220, 10, 10);
  all_color.setItems(loadStrings("list_217071"), 0);
  all_color.addEventHandler(this, "dropList1_click1");
  Add = new GButton(this, 219, 89, 80, 30);
  Add.setText("Add");
  Add.addEventHandler(this, "button4_Add");
  slider1 = new GSlider(this, 160, 50, 100, 35, 10.0);
  slider1.setShowValue(true);
  slider1.setShowLimits(true);
  slider1.setLimits(1.0, 1.0, 10.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(true);
  slider1.addEventHandler(this, "slider1_change1");
  label_xIn = new GLabel(this, 220, 255, 80, 20);
  label_xIn.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_xIn.setOpaque(true);
  label_yIn = new GLabel(this, 220, 290, 80, 20);
  label_yIn.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_yIn.setOpaque(true);
  label_xOut = new GLabel(this, 340, 255, 80, 20);
  label_xOut.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_xOut.setOpaque(true);
  label_yOut = new GLabel(this, 340, 290, 80, 20);
  label_yOut.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_yOut.setOpaque(true);
  button1 = new GButton(this, 195, 15, 80, 30);
  button1.setText("save");
  button1.addEventHandler(this, "button1_click1");
  RGB_ = new GImageButton(this, 320, 60, 100, 100, new String[] { "pngegg.png", "pngegg.png", "pngegg.png" } );
  RGB_.addEventHandler(this, "RGB_click1");
  // window1 = GWindow.getWindow(this, "Window title", 0, 0, 240, 120, JAVA2D);
  //window1.noLoop();
  // window1.setActionOnClose(G4P.CLOSE_WINDOW);
  //window1.addDrawHandler(this, "win_draw1");
  // window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GButton op; 
GButton sv; 
GButton wi; 
GTextField x; 
GTextField y; 
GDropList all_color; 
GButton Add; 
GSlider slider1; 
GLabel label_xIn; 
GLabel label_yIn; 
GLabel label_xOut; 
GLabel label_yOut; 
GButton button1; 
GImageButton RGB_; 
GWindow window1;
